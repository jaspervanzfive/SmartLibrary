<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhyADIAMQfALzb5jiTtlakwtzs8pTF2Gasx/P4+sfh63W0zYW80imLse31+aLN3UuevqvR4EKZ
        uuTw9YzB1S6Os/n8/fz+/unz98Le6eDu9NHm7vD3+X650DGPtG6xyvf7/CyMsv///yH/C1hNUCBEYXRh
        WE1QPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6
        eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS4w
        LWMwNjEgNjQuMTQwOTQ5LCAyMDEwLzEyLzA3LTEwOjU3OjAxICAgICAgICAiPiA8cmRmOlJERiB4bWxu
        czpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRl
        c2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEu
        MC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJl
        Zj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1wOkNyZWF0
        b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1LjEgV2luZG93cyIgeG1wTU06SW5zdGFuY2VJRD0ieG1w
        LmlpZDpDQTAyQzgzM0M1MUQxMUU1QTU0RkNFODcwQUNGMTI0MSIgeG1wTU06RG9jdW1lbnRJRD0ieG1w
        LmRpZDpDQTAyQzgzNEM1MUQxMUU1QTU0RkNFODcwQUNGMTI0MSI+IDx4bXBNTTpEZXJpdmVkRnJvbSBz
        dFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOkNBMDJDODMxQzUxRDExRTVBNTRGQ0U4NzBBQ0YxMjQxIiBz
        dFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOkNBMDJDODMyQzUxRDExRTVBNTRGQ0U4NzBBQ0YxMjQxIi8+
        IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJy
        Ij8+Af/+/fz7+vn49/b19PPy8fDv7u3s6+rp6Ofm5eTj4uHg397d3Nva2djX1tXU09LR0M/OzczLysnI
        x8bFxMPCwcC/vr28u7q5uLe2tbSzsrGwr66trKuqqainpqWko6KhoJ+enZybmpmYl5aVlJOSkZCPjo2M
        i4qJiIeGhYSDgoGAf359fHt6eXh3dnV0c3JxcG9ubWxramloZ2ZlZGNiYWBfXl1cW1pZWFdWVVRTUlFQ
        T05NTEtKSUhHRkVEQ0JBQD8+PTw7Ojk4NzY1NDMyMTAvLi0sKyopKCcmJSQjIiEgHx4dHBsaGRgXFhUU
        ExIREA8ODQwLCgkIBwYFBAMCAQAAIfkEBSUAHwAsAAAAAMgAyAAABf/gJ45kaZ5oqq5s675wLM90bd94
        ru987//AoHBILBqPyKRyyWw6n9CodEqtWq/YrHbL7Xq/4LB4TC6bz+i0es1uu9/wuHxOr9vv+Lx+z+/7
        /4CBgoOEhYaHiImKi4yNjo+QkZKTlJWWl5iZmpucnZ6foKGio6SlpqeoqaqrrK2ur7CxsrO0tba3uLm6
        u7y9vr/AwcLDxMXGx8jJysvMzc7P0NHS09TV1tfY2drb3N3e3+Dh4uPk5ebn6Onq6+zt7u/w8fLz9PX2
        9/j5+vv8/f7/AAMKHEiwoMGDCBMqXMiwocOHECNKnEixosWLGDNq3Mixo8ePIEOKHEmypMmTKFMWqlzJ
        sqXLlzBjypxJs6bNmzhz6gwUAgAh+QQFUwAfACwHAAoAuACvAAAF/+AnjmRpnqQBWB3qvnAsz3RNZW2t
        z13m+4bOZNjpGH6/DqARqRgMlJ10Sq1Sej6Iw1FB/oJC4tNrqIogkYJazdEQ3hENZ80uPAICNWJg7vv/
        Ihlpaw0PAnN0BQgaEW8EcYhrHABVExoeCpmam5ydmwEYgKKjNRkCmJ6pqpoPlFMMG6uynBFlpLe4JwAB
        s72bAqE7GA2+sw18ucnJFAkSxb4FCzoVHM+rHgwTytu4EALWsxIJUTMUBKgKD4wRCQkIkosR8nEF6wkO
        Gdz6pBiP8xrr5CXQgCASBwQJ5kX4pikAAxq7GgIQUuTJgosLwAyZAGFAhisdyO0b+QdkRQNEiv8Ywbgg
        A5gwAxhmemBBxoACmwhoI8mz56hhv5C5MKBhE4cKPpMqNRNREwKkKCg4iJWpQbClWLPK6EBgk4cIOUwA
        zSTBgUitaNOSWFC0oVkT1DYlyKe2bt0LOFnVJDHhnKYCQu0K1orhQVASu1C1GsxYq1ReTqF60+SBwNnG
        mHuaQ6cA7IcIClAdzUw6aQYEnxx0IFb1aunXI2NuKtDUIezbJC0YrkoAcgGouIMr6+tMQYPeCiREuCy8
        +SgAu4/z2mDZuXVSB6Ijp878uvcp2XlPr/69PJXwxreTN8++BnrpCri3nz/jvfru9POPsD8ev/78/MW3
        3n8EfhCgfAUWeOD/gAkCqF1/DRK4oH8RfjdhhfpdiCF9Gm7YXngeNMDANwh6yB56CGDAgAclmlheeA8c
        QEEFBVRGoYvBhUceABuMg6N5u0QzQgYJ6PRjeRYUsJcIM0Jw45GvLTBAWFBWaeWVWGap5ZZcdunll2CG
        KeaYZJZp5plopqnmmmy26eabcMYp55x01mnnnXjmqeeefPbp55+ABirooIQWauihiCaq6KKMNuroo5BG
        KumklFZq6aWYZqrpppx26umnoIYq6qiklmrqqaimquqqrLbq6quwxirrrLTWauutuOaq66689urrr/rh
        Z8AB0nAKwQG2jDABAAhc0CkGk5RQgQACAKfp/wCGAEcBAwoUQNemF5xi5AcDECMkp+Gmc4AIbZ0LLkMF
        QPABvMW+m0kAFlBAb6fpehAAAPpm4q6m6aYD8L7oMtRKwN3WS7DCBwvscKYFL4ywvQYzPDDFEGs8MaYV
        R9wwvx1f/PBMIm8McskSk4yyxy5nDO+3J8ucCQfJajqZzQoI4CynY1lMVgQ7ZboAaveKrMC/mvaFTozb
        FtdzYJU6AFkmCZSxQDWaaJDzpGMJLK8IYW/ggKU0bmIVCVJRZZxrkHYAmlsmGJCAUdY6KhU6EoxbQrjo
        +O3oAazdnDdiu/m7ZKM7ZwLMC8RpIsDYjHbQFsoxxKVJ1o0yIPUGD8lQ9sxbiupGmQZUwmA1Kwxs4frr
        sMfe+s9YVhD77bi7zkDh3R4O+SWbbLCBBMQXb/zxxG+ACedXMuMB8tBHL7zU6u5QMDid4IvlAVdj34nZ
        UzTl/SYI0PxjBnmNz8lXRe8QgTPPq68A6UcSQL33EqDibRVsCUBQAwAMoAAHeAdDAFAADZgLlPDyAAE+
        YAOGoNYAJ3jAReSBalIwAAQWUIELDGAAHgwhCEd4gY4A4AAQSGEFWvKkBBnggyVMoQUcgAEDcBACFxCh
        DmG4wg3OIAQAOw==
</value>
  </data>
</root>